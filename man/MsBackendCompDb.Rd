% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MsBackendCompDb-functions.R,
%   R/MsBackendCompDb.R
\name{MsBackendCompDb}
\alias{MsBackendCompDb}
\alias{MsBackendCompDb-class}
\alias{backendInitialize,MsBackendCompDb-method}
\alias{show,MsBackendCompDb-method}
\alias{peaksData,MsBackendCompDb-method}
\alias{dataStorage,MsBackendCompDb-method}
\alias{intensity<-,MsBackendCompDb-method}
\alias{mz<-,MsBackendCompDb-method}
\alias{spectraData,MsBackendCompDb-method}
\alias{spectraNames,MsBackendCompDb-method}
\alias{spectraNames<-,MsBackendCompDb-method}
\alias{[,MsBackendCompDb,ANY-method}
\alias{$<-,MsBackendCompDb-method}
\title{CompDb-based MS spectrum backend}
\usage{
MsBackendCompDb()

\S4method{backendInitialize}{MsBackendCompDb}(object, x, filter, ...)

\S4method{show}{MsBackendCompDb}(object)

\S4method{peaksData}{MsBackendCompDb}(object)

\S4method{dataStorage}{MsBackendCompDb}(object)

\S4method{intensity}{MsBackendCompDb}(object) <- value

\S4method{mz}{MsBackendCompDb}(object) <- value

\S4method{spectraData}{MsBackendCompDb}(object, columns = spectraVariables(object))

\S4method{spectraNames}{MsBackendCompDb}(object)

\S4method{spectraNames}{MsBackendCompDb}(object) <- value

\S4method{[}{MsBackendCompDb,ANY}(x, i, j, ..., drop = FALSE)

\S4method{$}{MsBackendCompDb}(x, name) <- value
}
\arguments{
\item{object}{an \code{MsBackendCompDb} instance.}

\item{x}{an \code{MsBackendCompDb} instance.}

\item{filter}{for \code{backendInitialize}: optional filter expression to specify
which elements to retrieve from the database.}

\item{...}{ignored.}

\item{value}{for \verb{$<-}: the replacement values.}

\item{columns}{for \code{spectraData}: \code{character} with names of columns/spectra
variables that should be returned. Defaults to
\code{spectraVariables(object)}. Database columns \code{"ms_level"},
\code{"precursor_mz"}, \code{"precursor_intensity"}, \code{"precursor_charge"} are
mapped to the core \code{Spectra} variables \code{msLevel}, \code{precursorMz},
\code{precursorIntensity} and \code{precursorCharge}, respectively.}

\item{i}{For \code{[}: \code{integer}, \code{logical} or \code{character} to subset the object.}

\item{j}{For \code{[}: not supported.}

\item{drop}{For \code{[}: not considered.}

\item{name}{for \verb{$<-}: the name of the spectra variable to replace.}
}
\description{
The \code{MsBackendCompDb} allows to retrieve MS2 spectra from an \code{\link[=CompDb]{CompDb()}}
object/database. The object keeps only a limited amount of data in memory
and retrieves the m/z and intensity values from the database \emph{on-demand}. By
extending the \code{\link[=MsBackendCached]{MsBackendCached()}} class directly, \code{MsBackendCompDb} supports
adding/replacing spectra variables. These values are however only cached
within the object and not propagated (written) to the database.

It is not intended that users create or use instances of this class directly,
the \code{\link[=Spectra]{Spectra()}} call on \code{\link[=CompDb]{CompDb()}} will return a \code{Spectra} object that uses
this backend.
}
\section{Methods implemented for \code{MsBackendCompDb}}{


The methods listed here are implemented for the \code{MsBackendCompDb}. All other
methods are inherited directly from the parent \code{\link[=MsBackendCached]{MsBackendCached()}} class.
See the help of \code{\link[=MsBackend]{MsBackend()}} in the \code{Spectra} package for a
complete listing of methods.
\itemize{
\item \code{peaksData}: gets the full list of peak matrices. Returns a \code{\link[=list]{list()}},
length equal to the number of spectra and each element being a \code{matrix}
with columns \code{"mz"} and \code{"intensity"} with the spectra's m/z and intensity
values.
\item \verb{intensity<-}: not supported.
\item \verb{mz<-}: not supported.
\item \code{spectraData}: returns the complete spectrum data including m/z and
intensity values as a \code{\link[=DataFrame]{DataFrame()}}.
\item \verb{$<-}: replace or add a spectrum variable. Note that \code{mz}, \code{intensity} and
\code{spectrum_id} variables can not be replaced.
}
}

\author{
Johannes Rainer
}
